"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[128],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return h}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(t),h=r,m=u["".concat(p,".").concat(h)]||u[h]||d[h]||l;return t?a.createElement(m,o(o({ref:n},s),{},{components:t})):a.createElement(m,o({ref:n},s))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9079:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),o=["components"],i={sidebar_position:2},p="Header Navigation Bar",c={unversionedId:"examples/header-navigation-bar",id:"examples/header-navigation-bar",isDocsHomePage:!1,title:"Header Navigation Bar",description:"It's basically the same as the Regular Navigation Bar except we add a headerHeight.",source:"@site/docs/examples/header-navigation-bar.md",sourceDirName:"examples",slug:"/examples/header-navigation-bar",permalink:"/react-native-scrollable-navigation-bar/examples/header-navigation-bar",editUrl:"https://github.com/zobeirhamid/react-native-scrollable-navigation-bar/edit/master/docs/docs/examples/header-navigation-bar.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Regular Navigation Bar",permalink:"/react-native-scrollable-navigation-bar/examples/regular-navigation-bar"},next:{title:"Search Bar",permalink:"/react-native-scrollable-navigation-bar/examples/search-bar"}},s=[{value:"Plain",id:"plain",children:[]},{value:"Collapsible",id:"collapsible",children:[]},{value:"Stay Collapsed",id:"stay-collapsed",children:[]},{value:"Sticky Component",id:"sticky-component",children:[{value:"Sticky Component - Regular",id:"sticky-component---regular",children:[]},{value:"StickyComponent - Collapsible",id:"stickycomponent---collapsible",children:[]},{value:"StickyComponent - Stay Collapsed",id:"stickycomponent---stay-collapsed",children:[]}]},{value:"Snap Component",id:"snap-component",children:[]},{value:"Combination",id:"combination",children:[]}],d={toc:s};function u(e){var n=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"header-navigation-bar"},"Header Navigation Bar"),(0,l.kt)("p",null,"It's basically the same as the ",(0,l.kt)("inlineCode",{parentName:"p"},"Regular Navigation Bar")," except we add a ",(0,l.kt)("inlineCode",{parentName:"p"},"headerHeight"),"."),(0,l.kt)("h2",{id:"plain"},"Plain"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AppleStyle } from 'react-native-scrollable-navigation-bar';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle title={'Hello World'} headerHeight={300}>\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")),(0,l.kt)("h2",{id:"collapsible"},"Collapsible"),(0,l.kt)("p",null,"The Navigation Bar collapses when scrolling down and shows up when scrolling up again. All with just setting the ",(0,l.kt)("inlineCode",{parentName:"p"},"collapsible")," prop to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AppleStyle } from 'react-native-scrollable-navigation-bar';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle title={'Hello World'} collapsible headerHeight={300}>\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")),(0,l.kt)("h2",{id:"stay-collapsed"},"Stay Collapsed"),(0,l.kt)("p",null,"Sometimes we want Navigation Bar to stay hidden all the time. By itself this is similar to just putting the Navigation Bar inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"Container"),", but it's getting more interesting in combination with ",(0,l.kt)("inlineCode",{parentName:"p"},"StickyComponent"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AppleStyle } from 'react-native-scrollable-navigation-bar';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle\n        title={'Hello World'}\n        collapsible\n        stayCollapsed\n        headerHeight={300}\n      >\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")),(0,l.kt)("h2",{id:"sticky-component"},"Sticky Component"),(0,l.kt)("p",null,"A ",(0,l.kt)("inlineCode",{parentName:"p"},"Component")," which sticks just right under the Navigation Bar."),(0,l.kt)("h3",{id:"sticky-component---regular"},"Sticky Component - Regular"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AppleStyle } from 'react-native-scrollable-navigation-bar';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  function StickyComponent() {\n    return <View style={{ height: 50, backgroundColor: 'red' }} />;\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle\n        title={'Hello World'}\n        borderColor={'darkred'}\n        StickyComponent={StickyComponent}\n        stickyHeight={50}\n        headerHeight={300}\n      >\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")),(0,l.kt)("h3",{id:"stickycomponent---collapsible"},"StickyComponent - Collapsible"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AppleStyle } from 'react-native-scrollable-navigation-bar';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  function StickyComponent() {\n    return <View style={{ height: 50, backgroundColor: 'red' }} />;\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle\n        title={'Hello World'}\n        borderColor={'darkred'}\n        StickyComponent={StickyComponent}\n        stickyHeight={50}\n        stickyCollapsible\n        headerHeight={300}\n      >\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")),(0,l.kt)("h3",{id:"stickycomponent---stay-collapsed"},"StickyComponent - Stay Collapsed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AppleStyle } from 'react-native-scrollable-navigation-bar';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  function StickyComponent() {\n    return <View style={{ height: 50, backgroundColor: 'red' }} />;\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle\n        title={'Hello World'}\n        borderColor={'darkred'}\n        StickyComponent={StickyComponent}\n        stickyHeight={50}\n        stickyCollapsible\n        stickyStayCollapsed\n        headerHeight={300}\n      >\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")),(0,l.kt)("h2",{id:"snap-component"},"Snap Component"),(0,l.kt)("p",null,"This is a Component which is also directly under the Navigation Bar, but does not stick, it vanishes after the initial scroll."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  function SnapComponent() {\n    return <View style={{ height: 50, backgroundColor: 'darkgreen' }} />;\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle\n        title={'Hello World'}\n        borderColor={'green'}\n        SnapComponent={SnapComponent}\n        snapHeight={50}\n        headerHeight={300}\n      >\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")),(0,l.kt)("h2",{id:"combination"},"Combination"),(0,l.kt)("p",null,"Now comes the real power of the library, you can combine all the previous animations together. ",(0,l.kt)("inlineCode",{parentName:"p"},"StickyComponent")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"SnapComponent"),", all the different collapses."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  function SnapComponent() {\n    return <View style={{ height: 50, backgroundColor: 'darkgreen' }} />;\n  }\n\n  function StickyComponent() {\n    return <View style={{ height: 50, backgroundColor: 'red' }} />;\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle\n        title={'Hello World'}\n        borderColor={'darkred'}\n        StickyComponent={StickyComponent}\n        stickyHeight={50}\n        SnapComponent={SnapComponent}\n        snapHeight={50}\n        collapsible\n        stayCollapsed\n        stickyCollapsible\n        //stickyStayCollapsed\n        headerHeight={300}\n      >\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")))}u.isMDXComponent=!0}}]);