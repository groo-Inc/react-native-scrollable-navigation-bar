"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[825],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=p(t),m=a,d=f["".concat(c,".").concat(m)]||f[m]||s[m]||o;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8507:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return f}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={sidebar_position:3},c="Search Bar",p={unversionedId:"examples/search-bar",id:"examples/search-bar",isDocsHomePage:!1,title:"Search Bar",description:"This is a replication of the iOS Search Bar animation. First, you need to create two refs, one for the TextInput and one for the Container. Then you put the TextInput as the SnapComponent. Next you you define onBlur on the Container, which triggers textInputRef.blur(). Then you define onFocus and onBlur on the TextInput which trigger containerRef.focus() and containerRef.blur() respectively.",source:"@site/docs/examples/search-bar.md",sourceDirName:"examples",slug:"/examples/search-bar",permalink:"/react-native-scrollable-navigation-bar/examples/search-bar",editUrl:"https://github.com/zobeirhamid/react-native-scrollable-navigation-bar/edit/master/docs/docs/examples/search-bar.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Header Navigation Bar",permalink:"/react-native-scrollable-navigation-bar/examples/header-navigation-bar"},next:{title:"Image Background",permalink:"/react-native-scrollable-navigation-bar/examples/image-background"}},u=[],s={toc:u};function f(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"search-bar"},"Search Bar"),(0,o.kt)("p",null,"This is a replication of the iOS Search Bar animation. First, you need to create two ",(0,o.kt)("inlineCode",{parentName:"p"},"refs"),", one for the ",(0,o.kt)("inlineCode",{parentName:"p"},"TextInput")," and one for the ",(0,o.kt)("inlineCode",{parentName:"p"},"Container"),". Then you put the ",(0,o.kt)("inlineCode",{parentName:"p"},"TextInput")," as the ",(0,o.kt)("inlineCode",{parentName:"p"},"SnapComponent"),". Next you you define ",(0,o.kt)("inlineCode",{parentName:"p"},"onBlur")," on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Container"),", which triggers ",(0,o.kt)("inlineCode",{parentName:"p"},"textInputRef.blur()"),". Then you define ",(0,o.kt)("inlineCode",{parentName:"p"},"onFocus")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"onBlur")," on the ",(0,o.kt)("inlineCode",{parentName:"p"},"TextInput")," which trigger ",(0,o.kt)("inlineCode",{parentName:"p"},"containerRef.focus()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"containerRef.blur()")," respectively."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AppleStyle } from 'react-native-scrollable-navigation-bar';\nimport { SearchBar } from 'react-native-elements';\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example(props) {\n  const ref = useRef(null);\n  const inputRef = useRef(null);\n\n  function Placeholder(props) {\n    return (\n      <View style={{ height: 200, margin: 50, backgroundColor: 'grey' }} />\n    );\n  }\n\n  function SnapComponent() {\n    return (\n      <SearchBar\n        ref={inputRef}\n        platform=\"ios\"\n        lightTheme\n        placeholder=\"Type Here...\"\n        onFocus={() => {\n          if (ref.current) {\n            ref.current.focus();\n          }\n        }}\n        onBlur={() => {\n          if (ref.current) {\n            ref.current.blur();\n          }\n        }}\n        containerStyle={{ backgroundColor: 'transparent' }}\n      />\n    );\n  }\n\n  return (\n    <View style={{ height: 500, width: 300, margin: 'auto' }}>\n      <AppleStyle\n        headerHeight={300}\n        title={'Hello World'}\n        SnapComponent={SnapComponent}\n        snapHeight={72}\n        ref={ref}\n        onBlur={() => {\n          if (inputRef.current) {\n            inputRef.current.blur();\n          }\n        }}\n      >\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </AppleStyle>\n    </View>\n  );\n}\n")))}f.isMDXComponent=!0}}]);